import { c as create_ssr_component, b as add_attribute, d as compute_rest_props, i as spread, j as escape_object, k as escape_attribute_value, e as escape, f as validate_dynamic_element, h as validate_void_dynamic_element, l as is_void, o as each, v as validate_component, q as createEventDispatcher, r as onDestroy, t as tick } from '../../chunks/index.js';
import classNames from 'classnames';
/* empty css                                                    */import { P, I as Img, S as Swiper_1, a as Swiper_slide } from '../../chunks/Searcher.svelte_svelte_type_style_lang.js';
import { E as Environments } from '../../chunks/db.js';
import { getDocument } from 'ssr-window';
import { $ } from 'dom7';

class NumberFormat {
  static formatShort(number) {
    return number.toLocaleString("en", {
      notation: "compact",
      compactDisplay: "short"
    });
  }
  static formatCurrency(number) {
    return new Intl.NumberFormat().format(number);
  }
}

/* node_modules/flowbite-svelte/tabs/TabHead.svelte generated by Svelte v3.50.1 */

const TabHead = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { tabStyle } = $$props;
	let { tabId } = $$props;
	let { customDivClass = '' } = $$props;
	let { customUlClass = '' } = $$props;

	const divClasses = {
		default: 'mb-4 border-b border-gray-200 dark:border-gray-700',
		full: 'mb-4',
		icon: 'mb-4 border-b border-gray-200 dark:border-gray-700',
		pill: 'mb-4 ',
		underline: 'mb-4 text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700',
		custom: customDivClass
	};

	const ulClasses = {
		default: 'flex flex-wrap -mb-px',
		full: 'hidden text-sm font-medium text-center text-gray-500 rounded-lg divide-x divide-gray-200 shadow sm:flex dark:divide-gray-700 dark:text-gray-400 mb-1',
		icon: 'flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400',
		pill: 'flex flex-wrap',
		underline: 'flex flex-wrap -mb-px',
		custom: customUlClass
	};

	if ($$props.tabStyle === void 0 && $$bindings.tabStyle && tabStyle !== void 0) $$bindings.tabStyle(tabStyle);
	if ($$props.tabId === void 0 && $$bindings.tabId && tabId !== void 0) $$bindings.tabId(tabId);
	if ($$props.customDivClass === void 0 && $$bindings.customDivClass && customDivClass !== void 0) $$bindings.customDivClass(customDivClass);
	if ($$props.customUlClass === void 0 && $$bindings.customUlClass && customUlClass !== void 0) $$bindings.customUlClass(customUlClass);
	return `<div${add_attribute("class", divClasses[tabStyle], 0)}><ul${add_attribute("class", ulClasses[tabStyle], 0)}${add_attribute("id", tabId, 0)} role="${"tablist"}">${slots.default ? slots.default({}) : ``}</ul></div>`;
});

/* node_modules/flowbite-svelte/tabs/TabHeadItem.svelte generated by Svelte v3.50.1 */

const TabHeadItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $$restProps = compute_rest_props($$props, [
		"id","tabStyle","activeTabValue","customActiveClass","customInActiveClass","customLiClass"
	]);

	let { id } = $$props;
	let { tabStyle } = $$props;
	let { activeTabValue } = $$props;
	let { customActiveClass = '' } = $$props;
	let { customInActiveClass = '' } = $$props;
	let { customLiClass = '' } = $$props;

	const activeClasses = {
		default: 'inline-block py-4 px-4 text-sm font-medium text-center text-blue-600 bg-gray-100 rounded-t-lg active dark:bg-gray-800 dark:text-blue-500',
		full: 'inline-block p-4 w-full text-gray-900 bg-gray-100 focus:ring-4 focus:ring-blue-300 active focus:outline-none dark:bg-gray-700 dark:text-white',
		icon: 'inline-flex p-4 text-blue-600 rounded-t-lg border-b-2 border-blue-600 active dark:text-blue-500 dark:border-blue-500 group',
		pill: 'active inline-block py-3 px-4 text-sm font-medium text-center text-white bg-blue-600 rounded-lg',
		underline: 'inline-block p-4 text-blue-600 rounded-t-lg border-b-2 border-blue-600 active dark:text-blue-500 dark:border-blue-500',
		custom: customActiveClass
	};

	const inactiveClasses = {
		default: 'inline-block py-4 px-4 text-sm font-medium text-center text-gray-500 rounded-t-lg hover:text-gray-600 hover:bg-gray-50 dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-gray-300',
		full: 'inline-block p-4 w-full bg-white hover:text-gray-700 hover:bg-gray-50 focus:ring-4 focus:ring-blue-300 focus:outline-none dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700',
		icon: 'inline-flex p-4 rounded-t-lg border-b-2 border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300 group ',
		pill: 'inline-block py-3 px-4 text-sm font-medium text-center text-gray-500 rounded-lg hover:text-gray-900 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-800 dark:hover:text-white',
		underline: 'inline-block p-4 rounded-t-lg border-b-2 border-transparent hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300',
		custom: customInActiveClass
	};

	const liClasses = {
		default: 'mr-2',
		full: 'w-full',
		icon: 'mr-2',
		pill: 'mr-2',
		underline: 'mr-2',
		custom: customLiClass
	};

	if ($$props.id === void 0 && $$bindings.id && id !== void 0) $$bindings.id(id);
	if ($$props.tabStyle === void 0 && $$bindings.tabStyle && tabStyle !== void 0) $$bindings.tabStyle(tabStyle);
	if ($$props.activeTabValue === void 0 && $$bindings.activeTabValue && activeTabValue !== void 0) $$bindings.activeTabValue(activeTabValue);
	if ($$props.customActiveClass === void 0 && $$bindings.customActiveClass && customActiveClass !== void 0) $$bindings.customActiveClass(customActiveClass);
	if ($$props.customInActiveClass === void 0 && $$bindings.customInActiveClass && customInActiveClass !== void 0) $$bindings.customInActiveClass(customInActiveClass);
	if ($$props.customLiClass === void 0 && $$bindings.customLiClass && customLiClass !== void 0) $$bindings.customLiClass(customLiClass);

	return `<li${add_attribute("class", liClasses[tabStyle], 0)} role="${"presentation"}"><button${spread(
		[
			escape_object($$restProps),
			{
				class: escape_attribute_value(classNames(activeTabValue === id
				? activeClasses[tabStyle]
				: inactiveClasses[tabStyle]))
			},
			{ id: escape(id, true) + "-tabhead" },
			{ type: "button" },
			{ role: "tab" },
			escape_object($$restProps)
		],
		{}
	)}>${slots.default ? slots.default({}) : ``}</button></li>`;
});

/* node_modules/flowbite-svelte/tabs/TabWrapper.svelte generated by Svelte v3.50.1 */

const TabWrapper = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { divClass = 'w-full' } = $$props;
	let { tabStyle = 'default' } = $$props;
	let tabId;
	let { activeTabValue } = $$props;
	if ($$props.divClass === void 0 && $$bindings.divClass && divClass !== void 0) $$bindings.divClass(divClass);
	if ($$props.tabStyle === void 0 && $$bindings.tabStyle && tabStyle !== void 0) $$bindings.tabStyle(tabStyle);
	if ($$props.activeTabValue === void 0 && $$bindings.activeTabValue && activeTabValue !== void 0) $$bindings.activeTabValue(activeTabValue);

	return `<div${add_attribute("class", classNames(divClass, $$props.class), 0)}>${slots.default
	? slots.default({ tabStyle, tabId, activeTabValue })
	: ``}</div>`;
});

/* node_modules/flowbite-svelte/typography/Heading.svelte generated by Svelte v3.50.1 */

const Heading = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $$restProps = compute_rest_props($$props, ["tag","color","customSize"]);
	let { tag = 'h1' } = $$props;
	let { color = 'text-gray-900 dark:text-white' } = $$props;
	let { customSize = '' } = $$props;

	const textSizes = {
		h1: 'text-5xl font-extrabold',
		h2: 'text-4xl font-bold',
		h3: 'text-3xl font-bold',
		h4: 'text-2xl font-bold',
		h5: 'text-xl font-bold',
		h6: 'text-lg font-bold'
	};

	if ($$props.tag === void 0 && $$bindings.tag && tag !== void 0) $$bindings.tag(tag);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.customSize === void 0 && $$bindings.customSize && customSize !== void 0) $$bindings.customSize(customSize);

	return `${(tag$1 => {
		validate_dynamic_element(tag$1);

		return tag$1
		? (() => {
				validate_void_dynamic_element(tag$1);

				return `<${tag}${spread(
					[
						escape_object($$restProps),
						{
							class: escape_attribute_value(classNames(customSize ? customSize : textSizes[tag], color, 'w-full', $$props.class))
						}
					],
					{}
				)}>${is_void(tag$1)
				? ''
				: `${slots.default ? slots.default({}) : ``}`}${is_void(tag$1) ? '' : `</${tag$1}>`}`;
			})()
		: '';
	})(tag)}`;
});

/* node_modules/svelte-lazy-image/LazyImage.svelte generated by Svelte v3.50.1 */

const LazyImage = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let cssClass;
	let $$restProps = compute_rest_props($$props, ["placeholder","src","alt","options"]);
	let { placeholder } = $$props;
	let { src } = $$props;
	let { alt } = $$props;

	let { options = {
		root: null,
		rootMargin: '0px 0px 0px 0px',
		threshold: 0.0
	} } = $$props;

	let imgElement;
	let path;

	if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0) $$bindings.placeholder(placeholder);
	if ($$props.src === void 0 && $$bindings.src && src !== void 0) $$bindings.src(src);
	if ($$props.alt === void 0 && $$bindings.alt && alt !== void 0) $$bindings.alt(alt);
	if ($$props.options === void 0 && $$bindings.options && options !== void 0) $$bindings.options(options);
	path = placeholder;
	cssClass = $$props.class || '';

	return `<img${spread(
		[
			{ src: escape_attribute_value(path) },
			{ alt: escape_attribute_value(alt) },
			escape_object($$restProps),
			{
				class: "svelte-lazy-image " + escape(cssClass, true)
			}
		],
		{
			classes: ""
		}
	)}${add_attribute("this", imgElement, 0)}>`;
});

/* node_modules/svelte-bricks/Masonry.svelte generated by Svelte v3.50.1 */

const css$3 = {
	code: ".s--4EeD7J7sqEx:where(div.masonry){display:flex;justify-content:center;overflow-wrap:anywhere;box-sizing:border-box}.s--4EeD7J7sqEx:where(div.masonry div.col){display:grid;height:-webkit-max-content;height:-moz-max-content;height:max-content;width:100%}.s--4EeD7J7sqEx{}.s--4EeD7J7sqEx{}",
	map: null
};

const Masonry = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let nCols;
	let itemsToCols;
	let { items } = $$props;
	let { minColWidth = 330 } = $$props;
	let { maxColWidth = 500 } = $$props;
	let { gap = 20 } = $$props;
	let { masonryWidth = 0 } = $$props;
	let { masonryHeight = 0 } = $$props;
	let { animate = true } = $$props;
	let { style = `` } = $$props;
	let { duration = 200 } = $$props;
	let { columnClass = `` } = $$props;
	let { idKey = `id` } = $$props;

	let { getId = item => {
		if (typeof item === `string`) return item;
		if (typeof item === `number`) return item;
		return item[idKey];
	} } = $$props;

	let { class: className = `` } = $$props;
	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
	if ($$props.minColWidth === void 0 && $$bindings.minColWidth && minColWidth !== void 0) $$bindings.minColWidth(minColWidth);
	if ($$props.maxColWidth === void 0 && $$bindings.maxColWidth && maxColWidth !== void 0) $$bindings.maxColWidth(maxColWidth);
	if ($$props.gap === void 0 && $$bindings.gap && gap !== void 0) $$bindings.gap(gap);
	if ($$props.masonryWidth === void 0 && $$bindings.masonryWidth && masonryWidth !== void 0) $$bindings.masonryWidth(masonryWidth);
	if ($$props.masonryHeight === void 0 && $$bindings.masonryHeight && masonryHeight !== void 0) $$bindings.masonryHeight(masonryHeight);
	if ($$props.animate === void 0 && $$bindings.animate && animate !== void 0) $$bindings.animate(animate);
	if ($$props.style === void 0 && $$bindings.style && style !== void 0) $$bindings.style(style);
	if ($$props.duration === void 0 && $$bindings.duration && duration !== void 0) $$bindings.duration(duration);
	if ($$props.columnClass === void 0 && $$bindings.columnClass && columnClass !== void 0) $$bindings.columnClass(columnClass);
	if ($$props.idKey === void 0 && $$bindings.idKey && idKey !== void 0) $$bindings.idKey(idKey);
	if ($$props.getId === void 0 && $$bindings.getId && getId !== void 0) $$bindings.getId(getId);
	if ($$props.class === void 0 && $$bindings.class && className !== void 0) $$bindings.class(className);
	$$result.css.add(css$3);
	nCols = Math.min(items.length, Math.floor(masonryWidth / (minColWidth + gap)) || 1);

	itemsToCols = items.reduce(
		(cols, item, idx) => {
			cols[idx % cols.length].push([item, idx]); // prettier-ignore
			return cols;
		},
		Array(nCols).fill(null).map(() => [])
	); // prettier-ignore

	return `<div class="${"masonry " + escape(className, true) + " s--4EeD7J7sqEx"}" style="${"gap: " + escape(gap, true) + "px; " + escape(style, true)}">${each(itemsToCols, col => {
		return `<div class="${"col " + escape(columnClass, true) + " s--4EeD7J7sqEx"}" style="${"gap: " + escape(gap, true) + "px; max-width: " + escape(maxColWidth, true) + "px;"}">${animate
		? `${each(col, ([item, idx]) => {
				return `<div class="${"s--4EeD7J7sqEx"}">${slots.default ? slots.default({ idx, item }) : ``}
          </div>`;
			})}`
		: `${each(col, ([item, idx]) => {
				return `${slots.default ? slots.default({ idx, item }) : ``}`;
			})}`}
    </div>`;
	})}</div>`;
});

const bongIconActive = "/_app/immutable/assets/bong-active-59ed6cfb.svg";

const notBongIconActive = "/_app/immutable/assets/not-bong-active-1d55625c.svg";

const bongIcon = "/_app/immutable/assets/bong-36f45762.svg";

const notBongIcon = "/_app/immutable/assets/not-bong-5caf9cb2.svg";

/* src/lib/shared/ui/components/grid-content/GridContent.svelte generated by Svelte v3.50.1 */

const GridContent = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { items = [] } = $$props;

	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$$rendered = `<section class="${"mb-2"}">${validate_component(Masonry, "Masonry").$$render(
			$$result,
			{
				items,
				idKey: '_id',
				minColWidth: 280,
				gap: 20,
				animate: true,
				duration: 500
			},
			{},
			{
				default: ({ item }) => {
					return `<div class="${"max-w-sm bg-white rounded-2xl shadow-md hover:scale-[1.02] ease-in-out duration-200"}"><section>${validate_component(LazyImage, "LazyImage").$$render(
						$$result,
						{
							src: item.photo.url,
							class: "rounded-t-2xl mb-2 w-full max-h-[500px]",
							placeholder: "\n  https://via.placeholder.com/" + item.photo.size + "/cccccc/969696?text=+",
							alt: item.title
						},
						{},
						{}
					)}
        <div class="${"px-3 py-1"}">${validate_component(P, "P").$$render(
						$$result,
						{
							align: "left",
							size: "sm",
							space: "normal",
							weight: "normal",
							opacity: 1
						},
						{},
						{
							default: () => {
								return `${escape(item.title)}`;
							}
						}
					)}</div></section>
      <div class="${"flex m-2 space-x-3 pb-2"}"><div class="${escape(item.downvote ? 'text-[#FF6711]' : 'text-zinc-300', true) + " text-[14px] flex items-center transition duration-150 ease-out px-3 py-2 cursor-pointer rounded-lg hover:bg-gray-100"}">${validate_component(Img, "Img").$$render(
						$$result,
						{
							src: item.downvote ? bongIconActive : bongIcon,
							class: "w-[1.5rem]"
						},
						{},
						{}
					)} ${escape(item.downvoteCount
					? NumberFormat.formatShort(item.downvoteCount)
					: '')}</div>

        <div class="${escape(item.upvote ? 'text-[#44A5FF]' : 'text-zinc-300', true) + " text-[14px] flex items-center transition duration-150 ease-out px-3 py-2 cursor-pointer rounded-lg hover:bg-gray-100"}">${validate_component(Img, "Img").$$render(
						$$result,
						{
							src: item.upvote ? notBongIconActive : notBongIcon,
							class: "w-[1.5rem]"
						},
						{},
						{}
					)} ${escape(item.upvoteCount
					? NumberFormat.formatShort(item.upvoteCount)
					: '')}</div></div></div>`;
				}
			}
		)}</section>

${``}

${``}`;
	} while (!$$settled);

	return $$rendered;
});

function createElementIfNotDefined(swiper, originalParams, params, checkProps) {
  const document = getDocument();

  if (swiper.params.createElements) {
    Object.keys(checkProps).forEach(key => {
      if (!params[key] && params.auto === true) {
        let element = swiper.$el.children(`.${checkProps[key]}`)[0];

        if (!element) {
          element = document.createElement('div');
          element.className = checkProps[key];
          swiper.$el.append(element);
        }

        params[key] = element;
        originalParams[key] = element;
      }
    });
  }

  return params;
}

function Navigation({
  swiper,
  extendParams,
  on,
  emit
}) {
  extendParams({
    navigation: {
      nextEl: null,
      prevEl: null,
      hideOnClick: false,
      disabledClass: 'swiper-button-disabled',
      hiddenClass: 'swiper-button-hidden',
      lockClass: 'swiper-button-lock',
      navigationDisabledClass: 'swiper-navigation-disabled'
    }
  });
  swiper.navigation = {
    nextEl: null,
    $nextEl: null,
    prevEl: null,
    $prevEl: null
  };

  function getEl(el) {
    let $el;

    if (el) {
      $el = $(el);

      if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {
        $el = swiper.$el.find(el);
      }
    }

    return $el;
  }

  function toggleEl($el, disabled) {
    const params = swiper.params.navigation;

    if ($el && $el.length > 0) {
      $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);
      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;

      if (swiper.params.watchOverflow && swiper.enabled) {
        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
      }
    }
  }

  function update() {
    // Update Navigation Buttons
    if (swiper.params.loop) return;
    const {
      $nextEl,
      $prevEl
    } = swiper.navigation;
    toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);
    toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);
  }

  function onPrevClick(e) {
    e.preventDefault();
    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;
    swiper.slidePrev();
    emit('navigationPrev');
  }

  function onNextClick(e) {
    e.preventDefault();
    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;
    swiper.slideNext();
    emit('navigationNext');
  }

  function init() {
    const params = swiper.params.navigation;
    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {
      nextEl: 'swiper-button-next',
      prevEl: 'swiper-button-prev'
    });
    if (!(params.nextEl || params.prevEl)) return;
    const $nextEl = getEl(params.nextEl);
    const $prevEl = getEl(params.prevEl);

    if ($nextEl && $nextEl.length > 0) {
      $nextEl.on('click', onNextClick);
    }

    if ($prevEl && $prevEl.length > 0) {
      $prevEl.on('click', onPrevClick);
    }

    Object.assign(swiper.navigation, {
      $nextEl,
      nextEl: $nextEl && $nextEl[0],
      $prevEl,
      prevEl: $prevEl && $prevEl[0]
    });

    if (!swiper.enabled) {
      if ($nextEl) $nextEl.addClass(params.lockClass);
      if ($prevEl) $prevEl.addClass(params.lockClass);
    }
  }

  function destroy() {
    const {
      $nextEl,
      $prevEl
    } = swiper.navigation;

    if ($nextEl && $nextEl.length) {
      $nextEl.off('click', onNextClick);
      $nextEl.removeClass(swiper.params.navigation.disabledClass);
    }

    if ($prevEl && $prevEl.length) {
      $prevEl.off('click', onPrevClick);
      $prevEl.removeClass(swiper.params.navigation.disabledClass);
    }
  }

  on('init', () => {
    if (swiper.params.navigation.enabled === false) {
      // eslint-disable-next-line
      disable();
    } else {
      init();
      update();
    }
  });
  on('toEdge fromEdge lock unlock', () => {
    update();
  });
  on('destroy', () => {
    destroy();
  });
  on('enable disable', () => {
    const {
      $nextEl,
      $prevEl
    } = swiper.navigation;

    if ($nextEl) {
      $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);
    }

    if ($prevEl) {
      $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);
    }
  });
  on('click', (_s, e) => {
    const {
      $nextEl,
      $prevEl
    } = swiper.navigation;
    const targetEl = e.target;

    if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {
      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;
      let isHidden;

      if ($nextEl) {
        isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);
      } else if ($prevEl) {
        isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);
      }

      if (isHidden === true) {
        emit('navigationShow');
      } else {
        emit('navigationHide');
      }

      if ($nextEl) {
        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
      }

      if ($prevEl) {
        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
      }
    }
  });

  const enable = () => {
    swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);
    init();
    update();
  };

  const disable = () => {
    swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);
    destroy();
  };

  Object.assign(swiper.navigation, {
    enable,
    disable,
    update,
    init,
    destroy
  });
}

/* src/lib/shared/ui/components/swiper/subject/SwiperSubject.svelte generated by Svelte v3.50.1 */

const SwiperSubject = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { items = [] } = $$props;
	if ($$props.items === void 0 && $$bindings.items && items !== void 0) $$bindings.items(items);

	return `<section>${validate_component(Swiper_1, "Swiper").$$render(
		$$result,
		{
			class: "px-16 py-5",
			loop: true,
			slidesPerView: 6,
			spaceBetween: 15,
			breakpoints: {
				320: { slidesPerView: 2 },
				640: { slidesPerView: 4 },
				1024: { slidesPerView: 6 },
				1200: { slidesPerView: 6 }
			},
			modules: [Navigation],
			navigation: true
		},
		{},
		{
			default: () => {
				return `${each(items, subject => {
					return `${validate_component(Swiper_slide, "SwiperSlide").$$render(
						$$result,
						{
							class: "rounded-2xl cursor-pointer hover:scale-[1.03] ease-in-out duration-200 min-w-[150px]"
						},
						{},
						{
							default: () => {
								return `${validate_component(Img, "Img").$$render(
									$$result,
									{
										src: subject.thumbnail,
										class: "rounded-2xl h-14 w-full object-cover",
										alt: "sample 1"
									},
									{},
									{}
								)}

        <div class="${"absolute top-50 left-50"}">${validate_component(P, "P").$$render(
									$$result,
									{
										class: "text-white",
										align: "center",
										space: "normal",
										weight: "medium",
										opacity: 1
									},
									{},
									{
										default: () => {
											return `${escape(subject.name)}`;
										}
									}
								)}</div>
      `;
							}
						}
					)}`;
				})}`;
			}
		}
	)}</section>`;
});

/* src/lib/shared/ui/components/searcher/Searcher.svelte generated by Svelte v3.50.1 */

const css$2 = {
	code: "div.bg-searcher.s-54JR_X_9pYjX{background-image:url('https://images.pexels.com/photos/47547/squirrel-animal-cute-rodents-47547.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2');background-size:cover;height:320px}.s-54JR_X_9pYjX{}.s-54JR_X_9pYjX{}",
	map: null
};

const Searcher = create_ssr_component(($$result, $$props, $$bindings, slots) => {

	$$result.css.add(css$2);

	return `<div class="${"bg-searcher bg-center bg-no-repeat rounded-2xl flex flex-col justify-center self-center s-54JR_X_9pYjX"}"><div class="${"px-7 sm:px-28 md:px-32 lg:px-72 text-center s-54JR_X_9pYjX"}">${validate_component(Heading, "Heading").$$render(
		$$result,
		{
			tag: "h2",
			color: "text-white",
			customSize: "text-4xl mb-5"
		},
		{},
		{
			default: () => {
				return `เพราะการศึกษาไทย ยังมีเรื่องบ้งๆ ที่เราต้องช่วยกันแก้
    `;
			}
		}
	)}
    

    <div class="${"relative s-54JR_X_9pYjX"}"><div class="${"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none s-54JR_X_9pYjX"}"><svg aria-hidden="${"true"}" class="${"w-5 h-5 text-gray-500 s-54JR_X_9pYjX"}" fill="${"none"}" stroke="${"currentColor"}" viewBox="${"0 0 24 24"}" xmlns="${"http://www.w3.org/2000/svg"}"><path stroke-linecap="${"round"}" stroke-linejoin="${"round"}" stroke-width="${"2"}" d="${"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"}" class="${"s-54JR_X_9pYjX"}"></path></svg></div>
      <input placeholder="${"ค้นหาเรื่องบ้งๆ ในระบบการศึกษาไทย"}" type="${"text"}" class="${"p-4 h-12 bg-white border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 pl-10 s-54JR_X_9pYjX"}"></div></div>
</div>`;
});

/* src/lib/shared/ui/components/submenu/Submenu.svelte generated by Svelte v3.50.1 */

const Submenu = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let activeTabValue3 = 1;

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$$rendered = `${validate_component(TabWrapper, "TabWrapper").$$render(
			$$result,
			{
				tabStyle: "custom",
				activeTabValue: activeTabValue3
			},
			{
				activeTabValue: $$value => {
					activeTabValue3 = $$value;
					$$settled = false;
				}
			},
			{
				default: ({ tabStyle, tabId }) => {
					return `${validate_component(TabHead, "TabHead").$$render(
						$$result,
						{
							customUlClass: "flex flex-wrap -mb-px justify-center",
							tabStyle,
							tabId
						},
						{},
						{
							default: () => {
								return `${validate_component(TabHeadItem, "TabHeadItem").$$render(
									$$result,
									{
										id: 1,
										tabStyle: "underline",
										activeTabValue: activeTabValue3
									},
									{},
									{
										default: () => {
											return `บ้งล่าสุด`;
										}
									}
								)}
    ${validate_component(TabHeadItem, "TabHeadItem").$$render(
									$$result,
									{
										id: 2,
										tabStyle: "underline",
										activeTabValue: activeTabValue3
									},
									{},
									{
										default: () => {
											return `บ้งมาแรง`;
										}
									}
								)}
    ${validate_component(TabHeadItem, "TabHeadItem").$$render(
									$$result,
									{
										id: 3,
										tabStyle: "underline",
										activeTabValue: activeTabValue3
									},
									{},
									{
										default: () => {
											return `บ้งมากสุด`;
										}
									}
								)}`;
							}
						}
					)}`;
				}
			}
		)}`;
	} while (!$$settled);

	return $$rendered;
});

const Spinner_svelte_svelte_type_style_lang = '';

/* node_modules/svelte-infinite-loading/src/Spinner.svelte generated by Svelte v3.50.1 */

const css$1 = {
	code: ".loading-wave-dots.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW{position:relative}.loading-wave-dots.s-I7SWpNAbCQEW .wave-item.s-I7SWpNAbCQEW{position:absolute;top:50%;left:50%;display:inline-block;margin-top:-4px;width:8px;height:8px;border-radius:50%;-webkit-animation:s-I7SWpNAbCQEW-loading-wave-dots linear 2.8s infinite;animation:s-I7SWpNAbCQEW-loading-wave-dots linear 2.8s infinite}.loading-wave-dots.s-I7SWpNAbCQEW .wave-item.s-I7SWpNAbCQEW:first-child{margin-left:-36px}.loading-wave-dots.s-I7SWpNAbCQEW .wave-item.s-I7SWpNAbCQEW:nth-child(2){margin-left:-20px;-webkit-animation-delay:0.14s;animation-delay:0.14s}.loading-wave-dots.s-I7SWpNAbCQEW .wave-item.s-I7SWpNAbCQEW:nth-child(3){margin-left:-4px;-webkit-animation-delay:0.28s;animation-delay:0.28s}.loading-wave-dots.s-I7SWpNAbCQEW .wave-item.s-I7SWpNAbCQEW:nth-child(4){margin-left:12px;-webkit-animation-delay:0.42s;animation-delay:0.42s}.loading-wave-dots.s-I7SWpNAbCQEW .wave-item.s-I7SWpNAbCQEW:last-child{margin-left:28px;-webkit-animation-delay:0.56s;animation-delay:0.56s}@-webkit-keyframes s-I7SWpNAbCQEW-loading-wave-dots{0%{transform:translateY(0);background:#bbb}10%{transform:translateY(-6px);background:#999}20%{transform:translateY(0);background:#bbb}100%{transform:translateY(0);background:#bbb}}@keyframes s-I7SWpNAbCQEW-loading-wave-dots{0%{transform:translateY(0);background:#bbb}10%{transform:translateY(-6px);background:#999}20%{transform:translateY(0);background:#bbb}100%{transform:translateY(0);background:#bbb}}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW{width:5px;height:5px;-webkit-animation:s-I7SWpNAbCQEW-loading-circles linear .75s infinite;animation:s-I7SWpNAbCQEW-loading-circles linear .75s infinite}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:first-child{margin-top:-14.5px;margin-left:-2.5px}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(2){margin-top:-11.26px;margin-left:6.26px}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(3){margin-top:-2.5px;margin-left:9.5px}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(4){margin-top:6.26px;margin-left:6.26px}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(5){margin-top:9.5px;margin-left:-2.5px}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(6){margin-top:6.26px;margin-left:-11.26px}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(7){margin-top:-2.5px;margin-left:-14.5px}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:last-child{margin-top:-11.26px;margin-left:-11.26px}@-webkit-keyframes s-I7SWpNAbCQEW-loading-circles{0%{background:#dfdfdf}90%{background:#505050}100%{background:#dfdfdf}}@keyframes s-I7SWpNAbCQEW-loading-circles{0%{background:#dfdfdf}90%{background:#505050}100%{background:#dfdfdf}}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW{background:#666;-webkit-animation:s-I7SWpNAbCQEW-loading-bubbles linear .75s infinite;animation:s-I7SWpNAbCQEW-loading-bubbles linear .75s infinite}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:first-child{margin-top:-12.5px;margin-left:-0.5px}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(2){margin-top:-9.26px;margin-left:8.26px}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(3){margin-top:-0.5px;margin-left:11.5px}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(4){margin-top:8.26px;margin-left:8.26px}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(5){margin-top:11.5px;margin-left:-0.5px}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(6){margin-top:8.26px;margin-left:-9.26px}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(7){margin-top:-0.5px;margin-left:-12.5px}.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:last-child{margin-top:-9.26px;margin-left:-9.26px}@-webkit-keyframes s-I7SWpNAbCQEW-loading-bubbles{0%{width:1px;height:1px;box-shadow:0 0 0 3px #666}90%{width:1px;height:1px;box-shadow:0 0 0 0 #666}100%{width:1px;height:1px;box-shadow:0 0 0 3px #666}}@keyframes s-I7SWpNAbCQEW-loading-bubbles{0%{width:1px;height:1px;box-shadow:0 0 0 3px #666}90%{width:1px;height:1px;box-shadow:0 0 0 0 #666}100%{width:1px;height:1px;box-shadow:0 0 0 3px #666}}.loading-default.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW{position:relative;border:1px solid #999;-webkit-animation:s-I7SWpNAbCQEW-loading-rotating ease 1.5s infinite;animation:s-I7SWpNAbCQEW-loading-rotating ease 1.5s infinite}.loading-default.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW:before{content:'';position:absolute;display:block;top:0;left:50%;margin-top:-3px;margin-left:-3px;width:6px;height:6px;background-color:#999;border-radius:50%}.loading-spiral.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW{border:2px solid #777;border-right-color:transparent;-webkit-animation:s-I7SWpNAbCQEW-loading-rotating linear .85s infinite;animation:s-I7SWpNAbCQEW-loading-rotating linear .85s infinite}@-webkit-keyframes s-I7SWpNAbCQEW-loading-rotating{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes s-I7SWpNAbCQEW-loading-rotating{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}.loading-bubbles.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW,.loading-circles.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW{position:relative}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW,.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW{position:absolute;top:50%;left:50%;display:inline-block;border-radius:50%}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(2),.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(2){-webkit-animation-delay:0.093s;animation-delay:0.093s}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(3),.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(3){-webkit-animation-delay:0.186s;animation-delay:0.186s}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(4),.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(4){-webkit-animation-delay:0.279s;animation-delay:0.279s}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(5),.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(5){-webkit-animation-delay:0.372s;animation-delay:0.372s}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(6),.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(6){-webkit-animation-delay:0.465s;animation-delay:0.465s}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:nth-child(7),.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:nth-child(7){-webkit-animation-delay:0.558s;animation-delay:0.558s}.loading-circles.s-I7SWpNAbCQEW .circle-item.s-I7SWpNAbCQEW:last-child,.loading-bubbles.s-I7SWpNAbCQEW .bubble-item.s-I7SWpNAbCQEW:last-child{-webkit-animation-delay:0.651s;animation-delay:0.651s}.loading-bubbles.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW,.loading-circles.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW,.loading-spiral.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW,.loading-wave-dots.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW,.loading-default.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW{display:inline-block;margin:5px 0;width:28px;height:28px;font-size:28px;line-height:28px;border-radius:50%}.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW{}.s-I7SWpNAbCQEW.s-I7SWpNAbCQEW{}",
	map: null
};

const Spinner = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { spinner = '' } = $$props;
	if ($$props.spinner === void 0 && $$bindings.spinner && spinner !== void 0) $$bindings.spinner(spinner);
	$$result.css.add(css$1);

	return `${spinner === 'bubbles'
	? `
	<span class="${"loading-bubbles s-I7SWpNAbCQEW"}"><span class="${"bubble-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"bubble-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"bubble-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"bubble-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"bubble-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"bubble-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"bubble-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"bubble-item s-I7SWpNAbCQEW"}"></span></span>`
	: `${spinner === 'circles'
		? `
	<span class="${"loading-circles s-I7SWpNAbCQEW"}"><span class="${"circle-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"circle-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"circle-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"circle-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"circle-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"circle-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"circle-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"circle-item s-I7SWpNAbCQEW"}"></span></span>`
		: `${spinner === 'spiral'
			? `
	<i class="${"loading-spiral s-I7SWpNAbCQEW"}"></i>`
			: `${spinner === 'wavedots'
				? `
	<span class="${"loading-wave-dots s-I7SWpNAbCQEW"}"><span class="${"wave-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"wave-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"wave-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"wave-item s-I7SWpNAbCQEW"}"></span>
		<span class="${"wave-item s-I7SWpNAbCQEW"}"></span></span>`
				: `
	<i class="${"loading-default s-I7SWpNAbCQEW"}"></i>`}`}`}`}`;
});

const InfiniteLoading_svelte_svelte_type_style_lang = '';

/* node_modules/svelte-infinite-loading/src/InfiniteLoading.svelte generated by Svelte v3.50.1 */

const css = {
	code: ".infinite-loading-container.s-yINUOmzzJjCM{clear:both;text-align:center}.btn-try-infinite.s-yINUOmzzJjCM{margin-top:5px;padding:5px 10px;color:#999;font-size:14px;line-height:1;background:transparent;border:1px solid #ccc;border-radius:3px;outline:none;cursor:pointer}.btn-try-infinite.s-yINUOmzzJjCM:not(:active):hover{opacity:0.8}.s-yINUOmzzJjCM{}.s-yINUOmzzJjCM{}",
	map: null
};

const THROTTLE_LIMIT = 50;
const LOOP_CHECK_TIMEOUT = 1000;
const LOOP_CHECK_MAX_CALLS = 10;

const ERROR_INFINITE_LOOP = [
	`executed the callback function more than ${LOOP_CHECK_MAX_CALLS} times for a short time, it looks like searched a wrong scroll wrapper that doest not has fixed height or maximum height, please check it. If you want to force to set a element as scroll wrapper rather than automatic searching, you can do this:`,
	'<!-- add a special attribute for the real scroll wrapper (can also be data-infinite-wrapper) -->',
	'<div infinite-wrapper>',
	'  ...',
	'  <!-- set forceUseInfiniteWrapper -->',
	'  <InfiniteLoading forceUseInfiniteWrapper>',
	'</div>',
	'or',
	'<div class="infinite-wrapper">',
	'  ...',
	'  <!-- set forceUseInfiniteWrapper as css selector of the real scroll wrapper -->',
	'  <InfiniteLoading forceUseInfiniteWrapper=".infinite-wrapper" />',
	'</div>'
].join('\n');

/**
 * the third argument for event bundler
 * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md
 */
const thirdEventArg = (() => {
	let supportsPassive = false;

	try {
		const opts = Object.defineProperty({}, 'passive', {
			get() {
				supportsPassive = { passive: true };
				return true;
			}
		});

		window.addEventListener('testPassive', null, opts);
		window.removeEventListener('testPassive', null, opts);
	} catch(e) {
		
	} //

	return supportsPassive;
})();

const throttler = {
	timers: [],
	caches: [],
	throttle(fn) {
		if (this.caches.indexOf(fn) === -1) {
			// cache current handler
			this.caches.push(fn);

			// save timer for current handler
			this.timers.push(setTimeout(
				() => {
					fn();

					// empty cache and timer
					this.caches.splice(this.caches.indexOf(fn), 1);

					this.timers.shift();
				},
				THROTTLE_LIMIT
			));
		}
	},
	reset() {
		// reset all timers
		this.timers.forEach(timer => {
			clearTimeout(timer);
		});

		this.timers.length = 0;

		// empty caches
		this.caches = [];
	}
};

const loopTracker = {
	isChecked: false,
	timer: null,
	times: 0,
	track() {
		// record track times
		this.times += 1;

		// try to mark check status
		clearTimeout(this.timer);

		this.timer = setTimeout(
			() => {
				this.isChecked = true;
			},
			LOOP_CHECK_TIMEOUT
		);

		// throw warning if the times of continuous calls large than the maximum times
		if (this.times > LOOP_CHECK_MAX_CALLS) {
			console.error(ERROR_INFINITE_LOOP);
			this.isChecked = true;
		}
	}
};

const scrollBarStorage = {
	key: '_infiniteScrollHeight',
	getScrollElement(element) {
		return element === window ? document.documentElement : element;
	},
	save(element) {
		const target = this.getScrollElement(element);

		// save scroll height on the scroll parent
		target[this.key] = target.scrollHeight;
	},
	restore(element) {
		const target = this.getScrollElement(element);

		/* istanbul ignore else */
		if (typeof target[this.key] === 'number') {
			target.scrollTop = target.scrollHeight - target[this.key] + target.scrollTop;
		}

		this.remove(target);
	},
	remove(element) {
		if (element[this.key] !== undefined) {
			// remove scroll height
			delete element[this.key]; // eslint-disable-line no-param-reassign
		}
	}
};

function isVisible(element) {
	return element && element.offsetWidth + element.offsetHeight > 0;
}

const InfiniteLoading = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let showSpinner;
	let showError;
	let showNoResults;
	let showNoMore;
	const dispatch = createEventDispatcher();

	const STATUS = {
		READY: 0,
		LOADING: 1,
		COMPLETE: 2,
		ERROR: 3
	};

	let { distance = 100 } = $$props;
	let { spinner = 'default' } = $$props;
	let { direction = 'bottom' } = $$props;
	let { forceUseInfiniteWrapper = false } = $$props;
	let { identifier = +new Date() } = $$props;
	let isFirstLoad = true; // save the current loading whether it is the first loading
	let status = STATUS.READY;
	let thisElement;
	let scrollParent;

	const stateChanger = {
		loaded: async () => {
			isFirstLoad = false;

			if (direction === 'top') {
				// wait for DOM updated
				await tick();

				scrollBarStorage.restore(scrollParent);
			}

			if (status === STATUS.LOADING) {
				await tick();
				await attemptLoad(true);
			}
		},
		complete: async () => {
			status = STATUS.COMPLETE;

			// force re-complation computed properties to fix the problem of get slot text delay
			await tick();

			scrollParent.removeEventListener('scroll', scrollHandler, thirdEventArg);
		},
		reset: async () => {
			status = STATUS.READY;
			isFirstLoad = true;
			scrollBarStorage.remove(scrollParent);
			scrollParent.addEventListener('scroll', scrollHandler, thirdEventArg);

			// wait for list to be empty and the empty action may trigger a scroll event
			setTimeout(
				() => {
					throttler.reset();
					scrollHandler();
				},
				1
			);
		},
		error: () => {
			status = STATUS.ERROR;
			throttler.reset();
		}
	};

	function scrollHandler(event) {
		if (status === STATUS.READY) {
			if (event && event.constructor === Event && isVisible(thisElement)) {
				throttler.throttle(attemptLoad);
			} else {
				attemptLoad();
			}
		}
	}

	// Attempt to trigger load
	async function attemptLoad(isContinuousCall) {
		if (status !== STATUS.COMPLETE && isVisible(thisElement) && getCurrentDistance() <= distance) {
			status = STATUS.LOADING;

			if (direction === 'top') {
				// wait for spinner display
				await tick();

				scrollBarStorage.save(scrollParent);
			}

			dispatch('infinite', stateChanger);

			if (isContinuousCall && !forceUseInfiniteWrapper && !loopTracker.isChecked) {
				// check this component whether be in an infinite loop if it is not checked
				loopTracker.track();
			}
		} else if (status === STATUS.LOADING) {
			status = STATUS.READY;
		}
	}

	// Get current distance from the specified direction
	function getCurrentDistance() {
		let distance;

		if (direction === 'top') {
			distance = typeof scrollParent.scrollTop === 'number'
			? scrollParent.scrollTop
			: scrollParent.pageYOffset;
		} else {
			const infiniteElementOffsetTopFromBottom = thisElement.getBoundingClientRect().top;

			const scrollElementOffsetTopFromBottom = scrollParent === window
			? window.innerHeight
			: scrollParent.getBoundingClientRect().bottom;

			distance = infiniteElementOffsetTopFromBottom - scrollElementOffsetTopFromBottom;
		}

		return distance;
	}

	onDestroy(() => {
	});

	if ($$props.distance === void 0 && $$bindings.distance && distance !== void 0) $$bindings.distance(distance);
	if ($$props.spinner === void 0 && $$bindings.spinner && spinner !== void 0) $$bindings.spinner(spinner);
	if ($$props.direction === void 0 && $$bindings.direction && direction !== void 0) $$bindings.direction(direction);
	if ($$props.forceUseInfiniteWrapper === void 0 && $$bindings.forceUseInfiniteWrapper && forceUseInfiniteWrapper !== void 0) $$bindings.forceUseInfiniteWrapper(forceUseInfiniteWrapper);
	if ($$props.identifier === void 0 && $$bindings.identifier && identifier !== void 0) $$bindings.identifier(identifier);
	$$result.css.add(css);
	showSpinner = status === STATUS.LOADING;
	showError = status === STATUS.ERROR;
	showNoResults = status === STATUS.COMPLETE && isFirstLoad;
	showNoMore = status === STATUS.COMPLETE && !isFirstLoad;

	return `<div class="${"infinite-loading-container s-yINUOmzzJjCM"}"${add_attribute("this", thisElement, 0)}>${showSpinner
	? `<div class="${"infinite-status-prompt s-yINUOmzzJjCM"}">${slots.spinner
		? slots.spinner({ isFirstLoad })
		: `
				${validate_component(Spinner, "Spinner").$$render($$result, { spinner }, {}, {})}
			`}</div>`
	: ``}

	${showNoResults
	? `<div class="${"infinite-status-prompt s-yINUOmzzJjCM"}">${slots.noResults
		? slots.noResults({})
		: `
				No results :(
			`}</div>`
	: ``}

	${showNoMore
	? `<div class="${"infinite-status-prompt s-yINUOmzzJjCM"}">${slots.noMore
		? slots.noMore({})
		: `
				No more data :)
			`}</div>`
	: ``}

	${showError
	? `<div class="${"infinite-status-prompt s-yINUOmzzJjCM"}">${slots.error
		? slots.error({ attemptLoad })
		: `
				Oops, something went wrong :(
				<br class="${"s-yINUOmzzJjCM"}">
				<button class="${"btn-try-infinite s-yINUOmzzJjCM"}">Retry
				</button>
			`}</div>`
	: ``}
</div>`;
});

/* src/routes/+page.svelte generated by Svelte v3.50.1 */

const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let items = [];
	let { data } = $$props;

	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$$rendered = `${($$result.head += `${($$result.title = `<title>${escape(Environments.APP_TITLE)}</title>`, "")}`, "")}

<section>${validate_component(Searcher, "Searcher").$$render($$result, {}, {}, {})}</section>

<section class="${"mt-5"}">${validate_component(Submenu, "Submenu").$$render($$result, {}, {}, {})}</section>

<section class="${"mt-5"}">${validate_component(SwiperSubject, "SwiperSubject").$$render($$result, { items: data.subjects }, {}, {})}</section>

<section class="${"mt-5 text-center"}">${validate_component(Heading, "Heading").$$render($$result, { customSize: "", tag: "h4", class: "mb-2" }, {}, {
			default: () => {
				return `ช่วยกันตรวจความบ้ง`;
			}
		})}
  ${validate_component(P, "P").$$render(
			$$result,
			{
				class: "mb-8",
				align: "center",
				size: "sm",
				space: "normal",
				weight: "light",
				opacity: 1
			},
			{},
			{
				default: () => {
					return `บ้ง ไม่บ้งยังไง มาช่วยกันบอก`;
				}
			}
		)}
  ${validate_component(GridContent, "GridContent").$$render(
			$$result,
			{ items },
			{
				items: $$value => {
					items = $$value;
					$$settled = false;
				}
			},
			{}
		)}
  ${validate_component(InfiniteLoading, "InfiniteLoading").$$render($$result, { distance: 200 }, {}, {})}
</section>`;
	} while (!$$settled);

	return $$rendered;
});

export { Page as default };
